##Create a matrix that can cache its inverse

makeCacheMatrix <- function(x = matrix()) {
   i <- NULL
   set <- function(y){
      x <<- y
      i <<- NULL
   }
   get <- function(){x}
   setInverse <- function(inverse) {i <<- inverse}
   getInverse <- function() {i} 
   list(set = set, 
        get = get, 
        setInverse = setInverse, 
        getInverse = getInverse)
}

##Computes the inverse created by the other function

cacheSolve <- function(x, ...) {
   i <- x$getInverse()
   if(!is.null(i)){
      message("getting cached data")
      return(i)
   }
   mat <- x$get()
   i <- solve(mat,...)
   x$setInverse(i)
   i
}
